diff --git a/cmake/CMakeLists.txt b/cmake/CMakeLists.txt
index 71a0f37aa..655ac1263 100644
--- a/cmake/CMakeLists.txt
+++ b/cmake/CMakeLists.txt
@@ -33,6 +33,7 @@ option(protobuf_BUILD_TESTS "Build tests" ON)
 option(protobuf_BUILD_CONFORMANCE "Build conformance tests" OFF)
 option(protobuf_BUILD_EXAMPLES "Build examples" OFF)
 option(protobuf_BUILD_PROTOC_BINARIES "Build libprotoc and protoc compiler" ON)
+option(protobuf_BUILD_PROTOBUF_LITE "Build libprotobuf-lite" ON)
 if (BUILD_SHARED_LIBS)
   set(protobuf_BUILD_SHARED_LIBS_DEFAULT ON)
 else (BUILD_SHARED_LIBS)
@@ -180,7 +181,8 @@ if (MSVC)
   configure_file(extract_includes.bat.in extract_includes.bat)
 
   # Suppress linker warnings about files with no symbols defined.
-  set(CMAKE_STATIC_LINKER_FLAGS /ignore:4221)
+  # Bincrafters: https://github.com/protocolbuffers/protobuf/issues/6098
+  set(CMAKE_STATIC_LINKER_FLAGS "${CMAKE_STATIC_LINKER_FLAGS} /ignore:4221")
 
   # Configure Resource Compiler
   enable_language(RC)
@@ -214,11 +216,13 @@ if (protobuf_UNICODE)
 endif (protobuf_UNICODE)
 
 include(libprotobuf-lite.cmake)
-include(libprotobuf.cmake)
-if (protobuf_BUILD_PROTOC_BINARIES)
+if (NOT protobuf_BUILD_PROTOBUF_LITE)
+  include(libprotobuf.cmake)
+endif ()
+if (protobuf_BUILD_PROTOC_BINARIES AND NOT protobuf_BUILD_PROTOBUF_LITE)
   include(libprotoc.cmake)
   include(protoc.cmake)
-endif (protobuf_BUILD_PROTOC_BINARIES)
+endif (protobuf_BUILD_PROTOC_BINARIES AND NOT protobuf_BUILD_PROTOBUF_LITE)
 
 if (protobuf_BUILD_TESTS)
   include(tests.cmake)
diff --git a/cmake/install.cmake b/cmake/install.cmake
index be47c54a1..884c597f9 100644
--- a/cmake/install.cmake
+++ b/cmake/install.cmake
@@ -5,10 +5,13 @@ configure_file(${CMAKE_CURRENT_SOURCE_DIR}/protobuf.pc.cmake
 configure_file(${CMAKE_CURRENT_SOURCE_DIR}/protobuf-lite.pc.cmake
                ${CMAKE_CURRENT_BINARY_DIR}/protobuf-lite.pc @ONLY)
 
-set(_protobuf_libraries libprotobuf-lite libprotobuf)
-if (protobuf_BUILD_PROTOC_BINARIES)
+set(_protobuf_libraries libprotobuf-lite)
+if (NOT protobuf_BUILD_PROTOBUF_LITE)
+    list(APPEND _protobuf_libraries libprotobuf)
+endif (NOT protobuf_BUILD_PROTOBUF_LITE)
+if (protobuf_BUILD_PROTOC_BINARIES AND NOT protobuf_BUILD_PROTOBUF_LITE)
     list(APPEND _protobuf_libraries libprotoc)
-endif (protobuf_BUILD_PROTOC_BINARIES)
+endif (protobuf_BUILD_PROTOC_BINARIES AND NOT protobuf_BUILD_PROTOBUF_LITE)
 
 foreach(_library ${_protobuf_libraries})
   set_property(TARGET ${_library}
@@ -28,7 +31,7 @@ foreach(_library ${_protobuf_libraries})
     ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR} COMPONENT ${_library})
 endforeach()
 
-if (protobuf_BUILD_PROTOC_BINARIES)
+if (protobuf_BUILD_PROTOC_BINARIES AND NOT protobuf_BUILD_PROTOBUF_LITE)
   install(TARGETS protoc EXPORT protobuf-targets
     RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR} COMPONENT protoc)
   if (UNIX AND NOT APPLE)
@@ -38,7 +41,7 @@ if (protobuf_BUILD_PROTOC_BINARIES)
     set_property(TARGET protoc
       PROPERTY INSTALL_RPATH "@loader_path/../lib")
   endif()
-endif (protobuf_BUILD_PROTOC_BINARIES)
+endif (protobuf_BUILD_PROTOC_BINARIES AND NOT protobuf_BUILD_PROTOBUF_LITE)
 
 install(FILES ${CMAKE_CURRENT_BINARY_DIR}/protobuf.pc ${CMAKE_CURRENT_BINARY_DIR}/protobuf-lite.pc DESTINATION "${CMAKE_INSTALL_LIBDIR}/pkgconfig")
 
@@ -120,17 +123,22 @@ configure_file(protobuf-options.cmake
 
 # Allows the build directory to be used as a find directory.
 
-if (protobuf_BUILD_PROTOC_BINARIES)
+if (protobuf_BUILD_PROTOC_BINARIES AND NOT protobuf_BUILD_PROTOBUF_LITE)
   export(TARGETS libprotobuf-lite libprotobuf libprotoc protoc
     NAMESPACE protobuf::
     FILE ${CMAKE_INSTALL_CMAKEDIR}/protobuf-targets.cmake
   )
-else (protobuf_BUILD_PROTOC_BINARIES)
+elseif (protobuf_BUILD_PROTOBUF_LITE)
+  export(TARGETS libprotobuf-lite
+    NAMESPACE protobuf::
+    FILE ${CMAKE_INSTALL_CMAKEDIR}/protobuf-targets.cmake
+  )
+else ()
   export(TARGETS libprotobuf-lite libprotobuf
     NAMESPACE protobuf::
     FILE ${CMAKE_INSTALL_CMAKEDIR}/protobuf-targets.cmake
   )
-endif (protobuf_BUILD_PROTOC_BINARIES)
+endif (protobuf_BUILD_PROTOC_BINARIES AND NOT protobuf_BUILD_PROTOBUF_LITE)
 
 install(EXPORT protobuf-targets
   DESTINATION "${CMAKE_INSTALL_CMAKEDIR}"
diff --git a/cmake/libprotobuf.cmake b/cmake/libprotobuf.cmake
index fd70da7e4..c3a2f17c6 100644
--- a/cmake/libprotobuf.cmake
+++ b/cmake/libprotobuf.cmake
@@ -116,7 +116,12 @@ endif()
 
 add_library(libprotobuf ${protobuf_SHARED_OR_STATIC}
   ${libprotobuf_lite_files} ${libprotobuf_files} ${libprotobuf_includes} ${libprotobuf_rc_files})
-target_link_libraries(libprotobuf ${CMAKE_THREAD_LIBS_INIT})
+string(FIND "${CMAKE_LIBRARY_ARCHITECTURE}" "arm" ARM_CROSSCOMPILING)
+if (${ARM_CROSSCOMPILING} GREATER -1)
+    target_link_libraries(libprotobuf ${CMAKE_THREAD_LIBS_INIT} atomic)
+else()
+    target_link_libraries(libprotobuf ${CMAKE_THREAD_LIBS_INIT})
+endif()
 if(protobuf_WITH_ZLIB)
     target_link_libraries(libprotobuf ${ZLIB_LIBRARIES})
 endif()
diff --git a/cmake/protoc.cmake b/cmake/protoc.cmake
index f90e525e8..94e0d40a4 100644
--- a/cmake/protoc.cmake
+++ b/cmake/protoc.cmake
@@ -9,7 +9,12 @@ set(protoc_rc_files
 endif()
 
 add_executable(protoc ${protoc_files} ${protoc_rc_files})
-target_link_libraries(protoc libprotoc libprotobuf)
+# Clang x86 requires atomic lib
+if (${CMAKE_SIZEOF_VOID_P} EQUAL 4 AND "${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang" AND NOT ${CMAKE_LIBRARY_ARCHITECTURE})
+    target_link_libraries(protoc libprotobuf libprotoc atomic)
+else ()
+    target_link_libraries(protoc libprotobuf libprotoc)
+endif ()
 add_executable(protobuf::protoc ALIAS protoc)
 
 set_target_properties(protoc PROPERTIES
